apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ditto-reconciler.fullname" . }}
  labels:
    {{- include "ditto-reconciler.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ditto-reconciler.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "ditto-reconciler.selectorLabels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: operator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}

          {{- with .Values.image.name }}
          image: {{ .Values.image.name }}:{{ include "ditto-reconciler.imageTag" . }}
          {{ else }}
          image:
            ghcr.io/drogue-iot/ditto-reconciler-{{ if .Values.image.native }}native{{ else }}jvm{{ end }}:{{ include "ditto-reconciler.imageTag" . }}
          {{- end }}

          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- else }}
          imagePullPolicy: {{ if eq "latest" (include "ditto-reconciler.imageTag" .) -}}Always{{- else -}}IfNotPresent{{- end}}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          livenessProbe:
            httpGet:
              port: 8080
              path: /q/health/live
          readinessProbe:
            httpGet:
              port: 8080
              path: /q/health/ready

          env:
            - name: QUARKUS_LOG_LEVEL
              value: {{ .Values.logging.level }}

            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers | quote  }}

            {{- include "ditto-reconciler.translate-kafka-properties" (dict "prefix" "KAFKA_" "properties" .Values.kafka.properties ) | nindent 12 }}

            - name: QUARKUS_IO_DROGUE_CLOUD_COMMAND_CLIENT_USERNAME
              value: {{ .Values.drogue.api.username | quote }}
            - name: QUARKUS_IO_DROGUE_CLOUD_COMMAND_CLIENT_PASSWORD
              value: {{ .Values.drogue.api.password | quote }}

            - name: QUARKUS_IO_DROGUE_CLOUD_DITTO_RECONCILER_COMMAND_COMMANDCLIENT_MP_REST_URL
              value: {{ .Values.drogue.api.url | quote }}

            - name: MP_MESSAGING_INCOMING_EVENTS_GROUP_ID
              value: {{ .Values.kafka.groupId | quote }}
            - name: MP_MESSAGING_INCOMING_EVENTS_TOPIC
              value: {{ .Values.kafka.topic | quote }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
